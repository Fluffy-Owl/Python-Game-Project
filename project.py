import random

DictOfCountries = [
    "SINGAPORE",
    "MALAYSIA",
    "BRUNEI",
    "THAILAND",
    "MYANMAR",
    "CAMBODIA",
    "LAOS",
    "VIETNAM",
    "PHILIPPINES",
    "INDONESIA",
    "RUSSIA",
    "INDIA",
    "BRAZIL",
    "CHINA",
    "FRANCE",
    "SPAIN",
    "ENGLAND",
    "SWEDEN",
    "MONGOLIA",
    "ARGENTINA",
    "NIGERIA",
    "MOROCCO",
    "GERMANY",
    "GHANA",
]
RandomCountry = random.choice(DictOfCountries)

def main():
    # Welcoming the player into the game
    print("\n")
    print("Welcome to Hangman Game: Guess The Country Edition!")
    print("++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++")

    # First print the amount of letters in the country to be guessed
    for _ in RandomCountry:
        print("_", end=" ")
    print("\n")

    AmountOfWrongTries = 0
    ListOfGuessedLetters = []

    while True:
        # Now the guess a letter for the Country
        PlayerGuessedLetter = input("GUESS A LETTER: ").upper()

        # If the player is right
        if PlayerGuessedLetter in RandomCountry:
            ListOfGuessedLetters.append(PlayerGuessedLetter)
            x = f"{'\n'.join(DrawHangman(AmountOfWrongTries))}"
            print(x)
            # Show the player the guessed letters so they should not guess the same letters
            print(f"[The letters that you have guessed: {PrintGuessedLetters(ListOfGuessedLetters)} ]")
            AmountOfCorrectlyGuessedLetters = counter(ListOfGuessedLetters,RandomCountry)
            country = RandomCountry
            for char in country:
                if char in ListOfGuessedLetters:
                    print(char, end=" ")
                else:
                    print("_", end=" ")
            print()
            if AmountOfCorrectlyGuessedLetters == len(RandomCountry):
                print("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£Ä‚†§‚†§‚¢¥‚£ñ‚†≤‚†∂‚†§‚¢Ñ‚£Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä")
                print("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£†‚†§‚†û‚£©‚£¥‚†ö‚¢ø‚£ü‚£ø‚£ª‚£ü‚°ø‚£∂‚£¨‚£â‚°í‚†¶‚£Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä")
                print("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£º‚£π‚£Ø‚£ª‚°ø‚£ø‚£∑‚£å‚£ø‚£û‚°∑‚£Ø‚£ü‚°∑‚£Ø‚£ø‚°ø‚£ø‚£Ñ‚£≥‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä")
                print("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢†‚£ß‚£æ‚£Ø‚£ø‚£Ω‚°ø‚£æ‚£ü‚°∑‚£Ø‚£ü‚°∑‚£Ø‚£ü‚£∑‚°ø‚£ü‚£ø‚£Ω‚°ü‚°Ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä")
                print("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°ú‚£æ‚£ø‚£ª‚£ü‚°æ‚£Ω‚£≥‚¢ø‚£ü‚£∑‚¢Ø‚£ü‚°∑‚£Ø‚°ø‚£Ω‚£ø‚£ü‚£ø‚°á‚¢π‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä")
                print("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∞‚¢£‚†ü‚†∫‚†∑‚†Ø‚£ü‚£∑‚£Ø‚£ü‚£æ‚£ü‚°ø‚£æ‚£Ω‚°ø‚£Ω‚£ø‚£ü‚†æ‚†ü‚†õ‚¢∏‚°Ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä")
                print("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£º‚¢©‚£¥‚£æ‚¢ø‚£∂‚£∂‚£§‚£ë‚£õ‚£ø‚†Ø‚†ø‚†∑‚¢Ø‚£ø‚£õ‚£•‚£¥‚£∂‚£∂‚£∂‚£∏‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä")
                print("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢π‚£∂‚†π‚¢ø‚£Ü‚†à‚¢ª‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ø‚¢∏‚†É‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä")
                print("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£Ø‚£ß‚°à‚†ô‚†∑‚£¶‚£©‚¢ß‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†ø‚†è‚£†‚£∏‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä")
                print("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢ª‚£ø‚£ª‚¢∂‚£§‚£§‚£≠‚£ü‚£ª‚†ø‚£ø‚£ø‚£ø‚£ø‚¢ø‚£ü‚£Ø‚£µ‚£∂‚£ø‚£Ø‚°è‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä")
                print("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ò‚£ø‚£Ø‚¢ø‚£Ω‚£ª‚£ø‚†ø‚†ø‚†ø‚†∑‚†æ‚†∂‚†ø‚†ø‚†ø‚¢ø‚£Ω‚£æ‚£Ω‚£ø‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä")
                print("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ò‚£ø‚£ü‚£Ø‚£ø‚£∑‚£º‚£â‚£â‚£©‚°∂‚†©‚†Ñ‚°à‚¢â‚£µ‚£ø‚£ø‚£ø‚†É‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä")
                print("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ò‚°ª‚£ø‚°ø‚£Ω‚£ß‚°≥‚£ï‚¢≤‚¢í‚†í‚¢Ü‚°†‚£≤‚£ø‚£ø‚£ø‚†è‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä")
                print("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢†‚°û‚†ã‚¢≥‚°Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚°á‚†ê‚†ù‚†ª‚¢Ø‚£ø‚£∑‚£∂‚£∂‚£∂‚£∂‚£æ‚£ø‚†ü‚¢ª‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä")
                print("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚°á‚†Ä‚†Ä‚¢ª‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£Ä‚°§‚¢æ‚£á‚†Ä‚†à‚†¢‚°Ä‚†â‚†â‚†â‚†â‚†â‚†õ‚†â‚†Ä‚†Ä‚†∏‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä")
                print("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢ß‚†Ä‚†Ä‚¢∫‚£Ä‚£§‚¢ñ‚£∫‚£≠‚£∂‚¢æ‚°ø‚£ø‚£∑‚£§‚°Ä‚†à‚†Ç‚†Ñ‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£†‚£∂‚£ø‚£∑‚£¶‚£§‚£Ä‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä")
                print("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£†‚£º‚°á‚¢í‚†Å‚¢∑‚£æ‚¢ø‚£Ω‚£≥‚¢Ø‚°ø‚£Ω‚£≥‚¢Ø‚°ø‚£ø‚£∂‚£¶‚£§‚£†‚£Ö‚£†‚£¥‚£∂‚£ø‚¢ø‚£ª‚¢ø‚°Ω‚£Ø‚£ü‚°ø‚£ø‚£ø‚£≤‚†¶‚£§‚£Ä‚£Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä")
                print("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£†‚°æ‚†ø‚†æ‚†Ω‚†æ‚†§‚†•‚†¨‚¢ø‚£ü‚°æ‚£Ω‚¢Ø‚£ü‚°∑‚£Ø‚¢ø‚£Ω‚£≥‚¢Ø‚£ü‚£ø‚°ª‚†è‚¢ø‚£Ø‚¢∑‚£Ø‚£ü‚£Ø‚¢ø‚°Ω‚£∑‚¢Ø‚£ü‚°∑‚£Ø‚£ü‚°ø‚£∂‚£¶‚£≠‚°ô‚£≥‚¢¶‚£Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä")
                print("‚†Ä‚†Ä‚†Ä‚¢Ä‚¢ü‚£æ‚°è‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚†à‚£ø‚£ª‚£Ω‚£ª‚¢æ‚°Ω‚£Ø‚£ü‚°æ‚£Ω‚£ª‚¢æ‚†ü‚†Å‚†Ä‚†à‚†ô‚£ø‚¢æ‚°Ω‚£û‚£ø‚°Ω‚£Ø‚£ü‚£æ‚£ª‚¢∑‚£Ø‚£ü‚°∑‚£Ø‚°ü‚£±‚°ø‚£∑‚£Æ‚£≥‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä")
                print("‚†Ä‚†Ä‚†Ä‚£∏‚£º‚†ã‚†Ä‚†Ä‚†ê‚†í‚†í‚†í‚†Ç‚†í‚†ä‚¢ø‚£∑‚¢Ø‚£ü‚£Ø‚£ü‚°∑‚£Ø‚£ü‚£∑‚†ü‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†â‚£ø‚£ª‚°Ω‚£æ‚°Ω‚£∑‚¢Ø‚£∑‚£ª‚£ü‚°æ‚£Ω‚£ª‚°ù‚¢∞‚£ø‚£Ω‚£≥‚£ü‚£ø‚£ø‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä")
                print("‚†Ä‚†Ä‚†Ä‚°á‚£ø‚£á‚†Ä‚†Ä‚¢Ä‚¢Ä‚¢Ä‚£Ä‚£Ä‚£ê‚£à‚£∏‚°ø‚£Ø‚£ü‚°æ‚£Ω‚£ª‚¢∑‚°ª‚†É‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ô‚¢ü‚£∑‚£ª‚°Ω‚£ü‚£æ‚£≥‚¢Ø‚£ü‚£∑‚°ü‚¢Ä‚£ø‚°∑‚£Ø‚£∑‚£ª‚¢æ‚£ø‚¢∑‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä")
                print("‚†Ä‚†Ä‚¢∏‚£∑‚£ø‚£ø‚°Ä‚†Ä‚†Å‚†â‚¢â‚°Å‚†Ä‚†Ä‚†à‚£ø‚£ü‚°∑‚£Ø‚£ü‚°∑‚°Ø‚†ã‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†ª‚£∑‚£ª‚£ü‚°æ‚£Ω‚£Ø‚£ü‚£æ‚†Å‚¢∏‚£Ø‚£ü‚°∑‚£Ø‚£ü‚°ø‚£û‚£ø‚°Ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä")
                print("‚†Ä‚†Ä‚¢∏‚£ø‚£ø‚¢ª‚°á‚†Ä‚†Ä‚†Ç‚†í‚†í‚†í‚†í‚¢∫‚£ø‚°Ω‚£Ø‚¢∑‚°Ø‚†ã‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ô‚¢∑‚£Ø‚£ü‚£∑‚£ª‚¢æ‚†É‚†Ä‚£æ‚£ø‚£Ω‚£ª‚¢∑‚£Ø‚£ü‚£Ø‚£ü‚£ø‚°Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä")
                print("‚†Ä‚†Ä‚£º‚£ø‚°ü‚†à‚†ß‚†§‚£§‚£§‚£§‚£§‚£§‚†§‚†û‚£ø‚£ø‚£Ω‚†ü‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚¢ª‚£æ‚£≥‚¢Ø‚°è‚†Ä‚°Ä‚£ø‚£ø‚°æ‚£Ω‚£ª‚¢æ‚°Ω‚£æ‚°Ω‚£æ‚£ø‚£Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä")
                print("‚†Ä‚¢†‚£ü‚£ø‚£Ä‚£§‚£¥‚°ø‚£ø‚¢ø‚£Ü‚†Ä‚†Ä‚†Ä‚†Ä‚£ø‚¢ò‚°ã‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢ª‚£Ω‚°ø‚†Ä‚¢†‚¢∞‚£ø‚£ü‚£ø‚£Ø‚£ü‚£Ø‚£ü‚£∑‚£ª‚°Ω‚£ø‚£ø‚£Ü‚†Ä‚†Ä‚†Ä‚†Ä")
                print("‚†Ä‚£º‚£ø‚†π‚£ø‚£Ω‚£≥‚£ü‚£ø‚£ü‚£ø‚£∑‚£Ñ‚†Ä‚£º‚£ø‚°æ‚£ø‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢ô‚°Ö‚†Ä‚†é‚¢∏‚£ø‚£ü‚°æ‚£∑‚£ü‚°æ‚£Ω‚¢æ‚£Ω‚£ª‚¢∑‚£ª‚£û‚£∑‚°Ä‚†Ä‚†Ä")
                print("‚¢Ä‚£ø‚£ø‚°Ü‚£ø‚£û‚£∑‚£ª‚°ø‚£æ‚£ü‚£æ‚£ø‚¢ø‚£ø‚£ø‚°ø‚£Ω‚£ª‚£Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£†‚£ø‚£∑‚°ò‚†Ä‚£æ‚£ø‚°ø‚£Ω‚£ª‚¢æ‚£ü‚£Ø‚¢ø‚°æ‚£Ω‚¢Ø‚°ø‚£Ω‚£ø‚£ß‚†Ä‚†Ä")
                print("‚¢∏‚£ø‚£ø‚£ø‚£ø‚£Ω‚¢æ‚£ø‚°Ω‚†ü‚†ä‚†â‚†Ä‚†∏‚£∑‚£ø‚£ü‚°∑‚£Ø‚¢ø‚£ß‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£†‚£æ‚£ü‚£∑‚£ª‚£á‚¢Ä‚°è‚¢ª‚£ø‚£Ø‚£ü‚£Ø‚¢ø‚£æ‚¢ø‚°Ω‚£Ø‚°ø‚£Ω‚¢∑‚£ª‚£ø‚°Ü‚†Ä")
                print("‚¢∏‚£ø‚£ø‚£Ω‚£ª‚£ø‚†õ‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢π‚£ø‚¢Ø‚°ø‚£Ω‚£ª‚¢æ‚£∑‚£Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£†‚£æ‚£ü‚£∑‚£ª‚¢æ‚£ü‚£ø‚£º‚†Ä‚†Ä‚†ª‚£ø‚£Ω‚°æ‚£Ø‚¢ø‚£Ø‚£ü‚°∑‚£ü‚£Ø‚£ø‚£≥‚¢ø‚£ø")
                print("Congratulation! You've Guess The Correct Country ü•≥üéâüëèü§ùüëçüå∑")
                break
            else:
                continue

        # If the player is wrong
        else:
            ListOfGuessedLetters.append(PlayerGuessedLetter)
            AmountOfWrongTries = AmountOfWrongTries + 1
            x = f"{'\n'.join(DrawHangman(AmountOfWrongTries))}"
            print(x)
            # Show the player the guessed letters so they should not guess the same letters
            print(f"[The letters that you have guessed: {PrintGuessedLetters(ListOfGuessedLetters)} ]")
            country = RandomCountry
            for char in country:
                if char in ListOfGuessedLetters:
                    print(char, end=" ")
                else:
                    print("_", end=" ")
            print()
            if AmountOfWrongTries == 7:
                print("GAMEOVER. Don't Give Up! Try Againüí™!!!")
                print(f"The answer is {RandomCountry}")
                break
            else:
                continue


def DrawHangman(AmountOfGuessWrong):
    if AmountOfGuessWrong == 0:
        hangman = ["+======+", "|      ", "|     ", "|      ", "|     ", "|", "==========="]
        return hangman
    elif AmountOfGuessWrong == 1:
        hangman = ["+======+", "|      O", "|      ", "|      ", "|     ", "|", "==========="]
        return hangman
    elif AmountOfGuessWrong == 2:
        hangman = ["+======+", "|      O", "|     / ", "|      ", "|      ", "|", "==========="]
        return hangman
    elif AmountOfGuessWrong == 3:
        hangman = ["+======+", "|      O", "|     /| ", "|      ", "|      ", "|", "==========="]
        return hangman
    elif AmountOfGuessWrong == 4:
        hangman = ["+======+", "|      O", "|     /|„Å∏ ", "|      ", "|      ", "|", "==========="]
        return hangman
    elif AmountOfGuessWrong == 5:
        hangman = ["+======+", "|      O", "|     /|„Å∏ ", "|      |", "|      ", "|", "==========="]
        return hangman
    elif AmountOfGuessWrong == 6:
        hangman = ["+======+", "|      O", "|     /|„Å∏ ", "|      |", "|     /  ", "|", "==========="]
        return hangman
    else:
        hangman = ["+======+", "|      O", "|     /|„Å∏ ", "|      |", "|     / „Å∏ ", "|", "==========="]
        return hangman


def counter(ListOfGuessedLetters,country):
    counter = 0
    for char in country:
        if char in ListOfGuessedLetters:
            counter += 1
        else:
            continue
    return counter


def PrintGuessedLetters(ListOfGuessedLetters):
    x = " ".join(ListOfGuessedLetters)
    return x


if __name__ == "__main__":
    main()
